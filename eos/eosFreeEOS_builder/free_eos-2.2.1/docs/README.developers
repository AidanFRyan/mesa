This file contains information of use to FreeEOS developers.

Mathematical and physical (CODATA 2002) constants: these data are stored as
parameter statements in ../include/constants.h.  Only a minimal set of
primary physical constants are specified while the secondary constants are
determined (to ~16-digits of precision) from fundamental relationships
rather than rounded CODATA values.  For example, Boltzmann's constant is
calculated from the gas constant R and Avogadro's number. The code avoids
using rounded values of secondary constants since in the past such rounding
has introduced low-level (but still large with respect to other sources)
thermodynamic inconsistency.

Physical data: ionization potentials, helium I excitation data, and ideal
partition function data consisting of mean statistical weight of lower
states are stored in ../include/ionization.h, ../include/helium1.h, and
../include/statistical_weights.h.

Summary of the purpose of each routine and an indented list for
each routine of calls to other routines:

free_eos: principal interface to EOS, convenient wrapper function for
  free_eos_detailed and all its different control flags.

  free_eos_detailed: determine EOS solution via Newton-Raphson iteration 
		     for fixed, tl, and abundance.  If a cold start is
		     necessary (an EOS solution is required for conditions
		     too far from a previous call), there is an iteration
		     for fl (assuming kif != 0) for the closest free-energy
		     model that does not have auxiliary constants.  That is
		     followed (if the free-energy model requires auxiliary
		     variables to determine equilibrium constants) by a
		     combined iteration for fl (if kif != 0) and auxiliary
		     variables to match the supplied match_variable (fl for
		     kif=0, ln P for kif =1, or ln rho for kif=2).

    effective_radius: set pressure-ionization interaction radii

    pl_prepare: Planck-Larkin occupation probability and associated changes
		to equilibrium constants.

    fermi_dirac_exchange: Fermi-Dirac integrals and effect of exchange on
			  equilibrium constants.

      fermi_dirac: approximation for arbitrarily relativistic Fermi-Dirac
		   integrals

	fermi_dirac_direct: calculate F-D integrals by direct numerical
			    integration (extremely slow, but accurate).

	  quad4b: numerical integration by Gaussian quadrature and bisection
	  	  of the integrand range when necessary.

	  fermi_fun: integrand of F-D integral.

	  dfermi_funde: derivative of integrand of F-D integral wrt eta.

	  dfermi_fundb: derivative of integrand of F-D integral wrt beta.

	  dfermi_fundee: derivative of integrand of F-D integral wrt eta,
	  		 eta.

	  dfermi_fundeb: derivative of integrand of F-D integral wrt eta,
	  		 beta.

	  dfermi_fundbb: derivative of integrand of F-D integral wrt beta,
	  		 beta.

	  dfermi_fundeee: derivative of integrand of F-D integral wrt eta,
	  		 eta, eta.

	  dfermi_fundeeb: derivative of integrand of F-D integral wrt eta,
	  		 eta, beta.

	  dfermi_fundebb: derivative of integrand of F-D integral wrt eta,
	  		 beta, beta.

	fermi_dirac_direct end******

	fermi_dirac_original_coeff: calculate rounded original EFF
				    coefficients for F-D approximation.

	  fermi_dirac_recursion: calculate thermodynamically consistent
	  			 set of coefficients from "P" coefficients.

	fermi_dirac_minusnr_coeff: calculate EFF coefficients for F-D
				   approximation with non-relativistic
				   component subtracted.

	  fermi_dirac_recursion: as above.

	fermi_dirac_coeff: calculate EFF coefficients for F-D approximation
			   without non-relativistic component subtracted.

	  fermi_dirac_recursion: as above.

	effsum_calc: Calculate double polynomial sums used in EFF fits.

	fermi_dirac_ct: Cody-Thacher approximation for non-relativistic F-D
			integral

	  deriv_product: calculate nth derivative of product of two
	  		 functions.

          deriv_ratio: calculate nth derivative of ratio of two functions.

	    deriv_product: as above.

	fermi_dirac_ct end******

      fermi_dirac end******

      exchange_gcpf: exchange free energy and derivatives

        f_psi: approximation for non-relativistic electron-exchange integral

	  exct: numerical approximation to N-R electron-exchange integral
	  	divided by square of fp12.

          fp12: numerical approximation for F_1/2(eta)/Gamma(3/2)

        f_psi end******

	fermi_dirac_ct: see above

        exchange_coeff: Provide fitting coefficients to J and K exchange
			integrals.

	effsum_calc: See above.
	      
      exchange_gcpf end******

    fermi_dirac_exchange end******

COLD START for free_eos_detailed:

For a cold start to the auxiliary variable iteration we use pteh_pi,
master_coulomb, and excitation_pi (only the Planck-Larkin component).
Approximations are used in this mode to calculate rough starting
approximations for the equilibrium constants (dv values) completely
independent of auxiliary variables.  Then eos_calc is called to calculate
auxiliary variables as a function of those equilibrium constants.

    eos_cold_start: solve EOS for input fl and tl for closest free-energy
		     model which has no auxiliary constants to the desired
		     free-energy model. Calculate ln P, ln rho, and their
		     derivatives with repect to fl for the fl iteration
		     using the closest free-energy model, and also supply
		     starting estimates for auxiliary variables for the
		     desired free-energy model

      pteh_pi: PTEH-style pressure-ionization changes to equilibrium
                constants.

      master_coulomb: Coulomb changes to equilbrium constants.

        pteh_theta: crude approximation for theta_e and its derivatives only
		    used when trying for exact mimicry of PTEH EOS.

	coulomb: calculate EOS quantitities relevant to the Coulomb
		 interaction for wide variety of possible approximations.

          coulomb_adjust: find smooth join of DH and OCP approximations
			  using solution of two non-linear equations in two
			  unknowns.

            dgesvx: lapack routine to solve system of linear equations. In
	    	    this case used to iteratively solve the two non-linear
		    equations in two unknowns.

          tau_calc: calculate Coulomb tau(x) correction (only used to
	  	    mimic MDH EOS).

            lnx_calc: calculate ln(x) where x is the independent variable
	    	      of tau(x) (only used to mimic MDH EOS).

	coulomb end******

      master_coulomb end******

      excitation_pi: non-ideal equilibrium constant changes due to
		      pressure-ionization effects on excitation.

        molecular_hydrogen: H2 and H2+ ideal partition functions.

        qstar_calc: partition function for Rydberg levels.

          qryd_approx: Approximate Planck-Larkin partition function for
	 	      Rydberg levels.

            plsum: calculate Planck-Larkin sum.

              plsum_approx: calculate approximation to Planck-Larkin sum.

          qryd_approx end******

          qryd_calc: Exact partition function for Rydberg levels.

        qstar_calc end******

        qmhd_calc: partition function for all excited levels

          qstar_calc: see above.

      excitation_pi end******

      eos_calc: solve for number densities (and auxiliary variables) as a
		function of the equilibrium constants, dv(ion) including the
		effects of H2 and H2+

        ionize: atomic number densities.

        molecular_hydrogen: see above

        excitation_sum: calculate auxiliary variables associated with
			excited states.

          molecular_hydrogen: see above

          qstar_calc: see above

          qmhd_calc: see above

        excitation_sum end******

      eos_calc end******

    eos_cold_start end******

FOR KIF = 1, CALCULATE PRESSURE FOR COLD-START SOLUTION for free_eos_detailed:

    pteh_pi_end: PTEH pressure, entropy, and energy components.

    excitation_pi_end: excitation pressure, entropy, and energy components.

    master_coulomb_end: Coulomb pressure, entropy, and energy components.

    exchange_end: exchange pressure, entropy, and energy components.

WARM START for free_eos_detailed.

For a warm start to the auxiliary variable iteration fl, the auxiliary
variables, and their derivatives from a previous call to free_eos_detailed
are used to calculate a good starting approximation to fl and the auxiliary
variables using a Taylor-series approach.  Alternatively, fl and approximate
auxiliary variables are supplied by the eos_cold_start iteration.

    eos_bfgs: bfgs minimization of free energy.  Very slow (one call is the
    	      rough equivalent of ~300 Newton-Raphson iterations) so only
	      use in emergency when NR solution fails to converge after
	      100 iterations.

      bfgs_iterate: general BFGS minimization routine which uses reverse
		    communication to request function and gradient values.
		    This code chooses the direction of the line search
		    following the GNU Scientific Library BFGS routine, but
		    the line search of that library is slow/buggy so used a
		    completely independent (and fast) line search
		    implementation using the algorithm described in
		    Fletcher's book, "Practical Methods of Optimization".

      eos_free_calc: calculate the free energy and its gradient with respect
		     to auxiliary variables with the degeneracy parameter fl
		     determined from the auxiliary variables and input rho
		     value.

        fermi_dirac_exchange: see above.

        eos_jacobian: see below.

      eos_free_calc end******

    eos_bfgs end******

    eos_jacobian: Calculate system of equations to solve for Newton-Raphson
    		  (NR) iteration using good starting solution provided
		  by cold or warm start + eos_bfgs (if needed)

      aux_to_traditional: transform aux traditional form of variables.

      eos_warm_step: solve EOS for input fl, tl, and old auxiliary variables
		     for the desired free-energy model. Calculate new
		     auxiliary variables, ln P, ln rho, ln free and their
		     derivatives with respect to fl and old auxiliary
		     variables for use in combined iteration for fl and
		     auxiliary variables.  
		     
		     N.B. eos_warm_step uses one of three possible
		     pressure-ionization routines depending on whether using
		     the PTEH-, SIREFF-, or MDH-style models for the
		     pressure-ionization.

        pteh_pi: see above

        fjs_pi: SIREFF-style pressure-ionization changes to equilibrium
		constants.

        fjs_pi_free: SIREFF pressure component.

        mdh_pi: MDH-style pressure-ionization changes to equilibrium
		constants.

        mdh_pi_pressure_free: MDH pressure component.

        master_coulomb: see above.

        master_coulomb_pressure: Coulomb pressure component.

        excitation_pi: see above.

        eos_calc: see above.

        exchange_pressure: exchange pressure component.

        pteh_pi_pressure: PTEH pressure component.

        excitation_pi_pressure_free: excitation pressure and free-energy
				     components.

      eos_warm_step end******

      traditional_to_aux: transform traditional to aux form of variables.

      free_non_ideal_calc: calculate free energy and its gradient.

        master_coulomb: see above.

        master_coulomb_free: Coulomb free-energy component.

        exchange_free: exchange free-energy component.

        pteh_pi: see above.

        pteh_pi_free: PTEH free-energy component.

        fjs_pi: see above.

        fjs_pi_free: SIREFF free-energy component.

        mdh_pi: see above.

        mdh_pi_pressure_free: MDH free-energy component.

        excitation_pi: see above.

        excitation_pi_pressure_free: excitation free-energy component.

      free_non_ideal_calc end******

    eos_jacobian end******

    dgesvx: see above.  In this case used to iteratively solve the njacobian
	    non-linear equations in njacobian unknowns required for the
	    normal NR method of solution.  Additionally, dgesvx is used to
	    obtain derivatives of the converged NR EOS solution wrt to
	    match_variable and tl.

CALCULATE THERMODYNAMIC FUNCTIONS FOR ALL CONVERGED SOLUTIONS for
free_eos_detailed.

     eos_tqft: solve EOS for input fl, tl, old auxiliary variables and old
	       auxiliary variable fl and tl derivatives for the desired
	       free-energy model. Calculate thermodynamic quantities and
	       their derivatives with respect to fl and tl.

	       N.B. eos_tqft uses one of three possible pressure-ionization
	       routines depending on whether using the PTEH-, SIREFF-, or
	       MDH-style models for the pressure-ionization.

       pteh_pi: see above

       fjs_pi: see above.

       mdh_pi: see above.

       master_coulomb: see above.

       excitation_pi: see above.

       eos_calc: see above.

       pteh_pi_end: see above.

       fjs_pi_end: SIREFF pressure, entropy, and energy components.

       mdh_pi_end: MDH pressure, entropy, and energy components.

       excitation_pi_end: see above.

       master_coulomb_end: see above.

       exchange_end: see above.

     eos_tqft end******

  free_eos_detailed end******

free_eos end******

The above annotations are worth keeping, but keeping track of who-calls-who
above is subject to human error.  Here are the results from

ftnchek -quiet -include=../include -nocheck -calltree *.f

summarizing who calls who as of 2008-07-07:

Tree of subprogram calls:
  (no main program found)
    EOS_SUM_CALC
    EOS_TQSUM_CALC
    FREE_EOS
        FREE_EOS_DETAILED
            DGESVX
            EFFECTIVE_RADIUS
            EOS_BFGS
                BFGS_ITERATE
                    BFGS_LINESEARCH
                        BFGS_CONSTANT_VECTOR
                        BFGS_CUBIC_MINIMUM
                        BFGS_QUADRATIC_MINIMUM
                        BFGS_TAKE_STEP
                            BFGS_CONSTANT_VECTOR
                            DAXPY
                            DCOPY
                        DCOPY
                        DDOT
                        DNRM2
                    BFGS_SET
                        DCOPY
                    DAXPY
                    DCOPY
                    DDOT
                    DNRM2
                    LNBLNK
                EOS_FREE_CALC
                    EOS_JACOBIAN
                        AUX_TO_TRADITIONAL
                        EOS_WARM_STEP
                            EOS_CALC
                                EXCITATION_SUM
                                    EXSUM_COMPONENT_ADD
                                    MOLECULAR_HYDROGEN
                                        POLY_SUM
                                    QMHD_CALC
                                        QSTAR_CALC
                                            QRYD_APPROX
                                                PLSUM
                                                    PLSUM_APPROX
                                            QRYD_CALC
                                    QSTAR_CALC (see above)
                                IONIZE
                                MOLECULAR_HYDROGEN (see above)
                            FERMI_DIRAC_EXCHANGE entry EXCHANGE_PRESSURE
                                EXCHANGE_GCPF
                                    EFFSUM_CALC
                                    EXCHANGE_COEFF
                                    FERMI_DIRAC_CT
                                        DERIV_PRODUCT
                                        DERIV_RATIO
                                            DERIV_PRODUCT
                                        POLY_SUM
                                    F_PSI
                                        EXCT_CALC
                                        FP12_CALC
                                FERMI_DIRAC
                                    EFFSUM_CALC
                                    FERMI_DIRAC_COEFF
                                        FERMI_DIRAC_RECURSION
                                    FERMI_DIRAC_CT (see above)
                                    FERMI_DIRAC_DIRECT
                                        DFERMI_FUN0_DB
                                        DFERMI_FUN0_DBB
                                        DFERMI_FUN_DB
                                        DFERMI_FUN_DBB
                                        DFERMI_FUN_DE
                                        DFERMI_FUN_DEB
                                        DFERMI_FUN_DEBB
                                        DFERMI_FUN_DEE
                                        DFERMI_FUN_DEEB
                                        DFERMI_FUN_DEEE
                                        FERMI_FUN
                                        FERMI_FUN0
                                        QUAD4B
                                    FERMI_DIRAC_MINUSNR_COEFF
                                        FERMI_DIRAC_RECURSION
                                    FERMI_DIRAC_ORIGINAL_COEFF
                                        FERMI_DIRAC_RECURSION
                                        ROUND_LN
                            EXCITATION_PI
                                MOLECULAR_HYDROGEN (see above)
                                QMHD_CALC (see above)
                                QSTAR_CALC (see above)
                            EXCITATION_PI_END entry EXCITATION_PI_PRESSURE_FREE
                            FJS_PI
                            FJS_PI entry FJS_PI_FREE
                            MASTER_COULOMB
                                COULOMB
                                    COULOMB_ADJUST
                                        DGESVX
                                    TAU_CALC
                                        LNX_CALC
                                PTEH_THETA
                            MASTER_COULOMB entry MASTER_COULOMB_PRESSURE
                                COULOMB (see above)
                                PTEH_THETA
                            MDH_PI
                            MDH_PI entry MDH_PI_PRESSURE_FREE
                            PTEH_PI
                            PTEH_PI entry PTEH_PI_PRESSURE
                        FREE_NON_IDEAL_CALC
                            FERMI_DIRAC_EXCHANGE entry EXCHANGE_FREE
                                EXCHANGE_GCPF (see above)
                                FERMI_DIRAC (see above)
                            EXCITATION_PI (see above)
                            EXCITATION_PI_END entry EXCITATION_PI_PRESSURE_FREE
                            FJS_PI
                            FJS_PI entry FJS_PI_FREE
                            MASTER_COULOMB (see above)
                            MASTER_COULOMB entry MASTER_COULOMB_FREE
                                COULOMB (see above)
                                PTEH_THETA
                            MDH_PI
                            MDH_PI entry MDH_PI_PRESSURE_FREE
                            PTEH_PI
                            PTEH_PI entry PTEH_PI_FREE
                        AUX_TO_TRADITIONAL entry TRADITIONAL_TO_AUX
                    FERMI_DIRAC_EXCHANGE
                        EXCHANGE_GCPF (see above)
                        FERMI_DIRAC (see above)
                LNBLNK
            EOS_COLD_START
                EOS_CALC (see above)
                EXCITATION_PI (see above)
                MASTER_COULOMB (see above)
                PTEH_PI
                AUX_TO_TRADITIONAL entry TRADITIONAL_TO_AUX
            EOS_JACOBIAN (see above)
            EOS_TQFT
                EOS_CALC (see above)
                EXCITATION_PI (see above)
                FJS_PI
                MASTER_COULOMB (see above)
                MDH_PI
                PTEH_PI
            FERMI_DIRAC_EXCHANGE entry EXCHANGE_END
                EXCHANGE_GCPF (see above)
                FERMI_DIRAC (see above)
            EXCITATION_PI_END
            FERMI_DIRAC_EXCHANGE (see above)
            FJS_PI entry FJS_PI_END
            MASTER_COULOMB entry MASTER_COULOMB_END
                COULOMB (see above)
                PTEH_THETA
            MDH_PI entry MDH_PI_END
            PL_PREPARE
            PTEH_PI entry PTEH_PI_END
    FREE_EOS_INTERPOLATED
        LAGRANGE4
        LNBLNK
    VERSION
